{
    "tables": 
    {
        "DimDate":
        {
            "raw_schema": "sk_dateid BIGINT COMMENT 'Surrogate key for the date', datevalue DATE COMMENT 'The date stored appropriately for doing comparisons in the Data Warehouse', datedesc STRING COMMENT 'The date in full written form, e.g. July 7,2004', calendaryearid INT COMMENT 'Year number as a number', calendaryeardesc STRING COMMENT 'Year number as text', calendarqtrid INT COMMENT 'Quarter as a number, e.g. 20042', calendarqtrdesc STRING COMMENT 'Quarter as text, e.g. 2004 Q2', calendarmonthid INT COMMENT 'Month as a number, e.g. 20047', calendarmonthdesc STRING COMMENT 'Month as text, e.g. 2004 July', calendarweekid INT COMMENT 'Week as a number, e.g. 200428', calendarweekdesc STRING COMMENT 'Week as text, e.g. 2004-W28', dayofweeknum INT COMMENT 'Day of week as a number, e.g. 3', dayofweekdesc STRING COMMENT 'Day of week as text, e.g. Wednesday', fiscalyearid INT COMMENT 'Fiscal year as a number, e.g. 2005', fiscalyeardesc STRING COMMENT 'Fiscal year as text, e.g. 2005', fiscalqtrid INT COMMENT 'Fiscal quarter as a number, e.g. 20051', fiscalqtrdesc STRING COMMENT 'Fiscal quarter as text, e.g. 2005 Q1', holidayflag BOOLEAN COMMENT 'Indicates holidays'",
            "sep": "|",
            "header": "False",
            "path": "Batch1/Date",
            "filename": "Date.txt",
            "layer": "bronze",
            "db": "wh"
        },
        "DimTime":
        {
            "raw_schema": "sk_timeid BIGINT COMMENT 'Surrogate key for the time', timevalue STRING COMMENT 'The time stored appropriately for doing', hourid INT COMMENT 'Hour number as a number, e.g. 01', hourdesc STRING COMMENT 'Hour number as text, e.g. 01', minuteid INT COMMENT 'Minute as a number, e.g. 23', minutedesc STRING COMMENT 'Minute as text, e.g. 01:23', secondid INT COMMENT 'Second as a number, e.g. 45', seconddesc STRING COMMENT 'Second as text, e.g. 01:23:45', markethoursflag BOOLEAN COMMENT 'Indicates a time during market hours', officehoursflag BOOLEAN COMMENT 'Indicates a time during office hours'",
            "sep": "|",
            "header": "False",
            "path": "Batch1/DimTime",
            "filename": "Time.txt",
            "layer": "bronze",
            "db": "wh"
        },
        "DimCompany":
        {
            "raw_schema": "sk_companyid BIGINT GENERATED ALWAYS AS IDENTITY COMMENT 'Surrogate key for CompanyID', companyid BIGINT COMMENT 'Company identifier (CIK number)', status STRING COMMENT 'Company status', name STRING COMMENT 'Company name', industry STRING COMMENT 'Company’s industry', sprating STRING COMMENT 'Standard & Poor company’s rating', islowgrade BOOLEAN COMMENT 'True if this company is low grade', ceo STRING COMMENT 'CEO name', addressline1 STRING COMMENT 'Address Line 1', addressline2 STRING COMMENT 'Address Line 2', postalcode STRING COMMENT 'Zip or postal code', city STRING COMMENT 'City', stateprov STRING COMMENT 'State or Province', country STRING COMMENT 'Country', description STRING COMMENT 'Company description', foundingdate DATE COMMENT 'Date the company was founded', iscurrent BOOLEAN COMMENT 'True if this is the current record', batchid INT COMMENT 'Batch ID when this record was inserted', effectivedate DATE COMMENT 'Beginning of date range when this record was the current record', enddate DATE COMMENT 'Ending of date range when this record was the current record. A record that is not expired will use the date 9999-12-31.'",
            "layer": "silver",
            "db": "wh"
        },
       
        "FactMarketHistory":
        {
            "raw_schema": "sk_securityid BIGINT COMMENT 'Surrogate key for SecurityID', sk_companyid BIGINT COMMENT 'Surrogate key for CompanyID', sk_dateid BIGINT COMMENT 'Surrogate key for the date', peratio DOUBLE COMMENT 'Price to earnings per share ratio', yield DOUBLE COMMENT 'Dividend to price ratio, as a percentage', fiftytwoweekhigh DOUBLE COMMENT 'Security highest price in last 52 weeks from this day', sk_fiftytwoweekhighdate BIGINT COMMENT 'Earliest date on which the 52 week high price was set', fiftytwoweeklow DOUBLE COMMENT 'Security lowest price in last 52 weeks from this day', sk_fiftytwoweeklowdate BIGINT COMMENT 'Earliest date on which the 52 week low price was set', closeprice DOUBLE COMMENT 'Security closing price on this day', dayhigh DOUBLE COMMENT 'Highest price for the security on this day', daylow DOUBLE COMMENT 'Lowest price for the security on this day', volume INT COMMENT 'Trading volume of the security on this day', batchid INT COMMENT 'Batch ID when this record was inserted'",
            "layer": "gold",
            "db": "wh",
            "liquid": "CLUSTER BY (batchid)",
            "partition": "PARTITIONED BY (batchid)"
        },
        "DailyMarketIncremental":
        {
            "raw_schema": "cdc_flag STRING COMMENT 'Denotes insert or update', cdc_dsn BIGINT COMMENT 'Database Sequence Number', dm_date DATE COMMENT 'Date of last completed trading day.', dm_s_symb STRING COMMENT 'Security symbol of the security', dm_close DOUBLE COMMENT 'Closing price of the security on this day.', dm_high DOUBLE COMMENT 'Highest price for the security on this day.', dm_low DOUBLE COMMENT 'Lowest price for the security on this day.', dm_vol INT COMMENT 'Volume of the security on this day.'",
            "sep": "|",
            "header": "False",
            "path": "Batch[23]/DailyMarket",
            "filename": "DailyMarket.txt",
            "add_tgt_schema": ", batchid INT COMMENT 'Batch ID when this record was inserted'",
            "add_tgt_query": "cast(substring(input_file_name() FROM (position('/Batch', input_file_name()) + 6) FOR 1) as int) batchid",
            "db": "stage",
            "layer": "bronze"
        },
        
        "CustomerIncremental":
        {
            "raw_schema": "cdc_flag STRING COMMENT 'Denotes insert or update', cdc_dsn BIGINT COMMENT 'Database Sequence Number', customerid BIGINT COMMENT 'Customer identifier', taxid STRING COMMENT 'Customer’s tax identifier', status STRING COMMENT 'Customer status type identifier', lastname STRING COMMENT 'Primary Customers last name.', firstname STRING COMMENT 'Primary Customers first name.', middleinitial STRING COMMENT 'Primary Customers middle initial', gender STRING COMMENT 'Gender of the primary customer', tier TINYINT COMMENT 'Customer tier', dob DATE COMMENT 'Customer’s date of birth, as YYYY-MM-DD.', addressline1 STRING COMMENT 'Address Line 1', addressline2 STRING COMMENT 'Address Line 2', postalcode STRING COMMENT 'Zip or postal code', city STRING COMMENT 'City', stateprov STRING COMMENT 'State or province', country STRING COMMENT 'Country', c_ctry_1 STRING COMMENT 'Country code for Customers phone 1.', c_area_1 STRING COMMENT 'Area code for customer’s phone 1.', c_local_1 STRING COMMENT 'Local number for customer’s phone 1.', c_ext_1 STRING COMMENT 'Extension number for Customer’s phone 1.', c_ctry_2 STRING COMMENT 'Country code for Customers phone 2.', c_area_2 STRING COMMENT 'Area code for Customer’s phone 2.', c_local_2 STRING COMMENT 'Local number for Customer’s phone 2.', c_ext_2 STRING COMMENT 'Extension number for Customer’s phone 2.', c_ctry_3 STRING COMMENT 'Country code for Customers phone 3.', c_area_3 STRING COMMENT 'Area code for Customer’s phone 3.', c_local_3 STRING COMMENT 'Local number for Customer’s phone 3.', c_ext_3 STRING COMMENT 'Extension number for Customer’s phone 3.', email1 STRING COMMENT 'Customers e-mail address 1.', email2 STRING COMMENT 'Customers e-mail address 2.', lcl_tx_id STRING COMMENT 'Customers local tax rate', nat_tx_id STRING COMMENT 'Customers national tax rate'",
            "sep": "|",
            "header": "False",
            "path": "Batch*/Customer",
            "filename": "Customer.txt",
            "add_tgt_schema": ", batchid INT COMMENT 'Batch ID when this record was inserted'",
            "add_tgt_query": "cast(substring(input_file_name() FROM (position('/Batch', input_file_name()) + 6) FOR 1) as int) batchid",
            "db": "stage",
            "layer": "bronze",
            "liquid": "CLUSTER BY (tier)",
            "partition": "PARTITIONED BY (tier)"
        },
        "AccountIncremental":
        {
            "raw_schema": "cdc_flag STRING COMMENT 'Denotes insert or update', cdc_dsn BIGINT COMMENT 'Database Sequence Number', accountid BIGINT COMMENT 'Customer account identifier', ca_b_id BIGINT COMMENT 'Identifier of the managing broker', ca_c_id BIGINT COMMENT 'Owning customer identifier', accountDesc STRING COMMENT 'Name of customer account', TaxStatus TINYINT COMMENT 'Tax status of this account', ca_st_id STRING COMMENT 'Customer status type identifier'",
            "sep": "|",
            "header": "False",
            "path": "Batch*/Account",
            "filename": "Account.txt",
            "add_tgt_schema": ", batchid INT COMMENT 'Batch ID when this record was inserted'",
            "add_tgt_query": "cast(substring(input_file_name() FROM (position('/Batch', input_file_name()) + 6) FOR 1) as int) batchid",
            "db": "stage",
            "layer": "bronze"
        },
        
        "CashTransactionIncremental":
        {
            "raw_schema": "cdc_flag STRING COMMENT 'Denotes insert or update', cdc_dsn BIGINT COMMENT 'Database Sequence Number', ct_ca_id BIGINT COMMENT 'Customer account identifier', ct_dts TIMESTAMP COMMENT 'Timestamp of when the trade took place', ct_amt DOUBLE COMMENT 'Amount of the cash transaction.', ct_name STRING COMMENT 'Transaction name, or description: e.g. Cash from sale of DuPont stock.'",
            "sep": "|",
            "header": "False",
            "path": "Batch[23]/CashTransaction",
            "filename": "CashTransaction.txt",
            "add_tgt_schema": ", batchid INT COMMENT 'Batch ID when this record was inserted'",
            "add_tgt_query": "cast(substring(input_file_name() FROM (position('/Batch', input_file_name()) + 6) FOR 1) as int) batchid",
            "db": "stage",
            "layer": "bronze"
        }
    },
    "views":
    {
        "HR":
        {
            "raw_schema": "employeeid STRING COMMENT 'ID of employee', managerid STRING COMMENT 'ID of employee’s manager', employeefirstname STRING COMMENT 'First name', employeelastname STRING COMMENT 'Last name', employeemi STRING COMMENT 'Middle initial', employeejobcode STRING COMMENT 'Numeric job code', employeebranch STRING COMMENT 'Facility in which employee has office', employeeoffice STRING COMMENT 'Office number or description', employeephone STRING COMMENT 'Employee phone number'",
            "sep": ",",
            "header": "False",
            "path": "Batch1/HR",
            "filename": "HR.csv"
        },
        "TradeHistory":
        {
            "raw_schema": "t_id BIGINT COMMENT 'Trade identifier.', t_dts TIMESTAMP COMMENT 'Date and time of trade.', t_st_id STRING COMMENT 'Status type identifier', t_tt_id STRING COMMENT 'Trade type identifier', t_is_cash TINYINT COMMENT 'Is this trade a cash (‘1’) or margin (‘0’) trade?', t_s_symb STRING COMMENT 'Security symbol of the security', t_qty INT COMMENT 'Quantity of securities traded.', t_bid_price DOUBLE COMMENT 'The requested unit price.', t_ca_id BIGINT COMMENT 'Customer account identifier.', t_exec_name STRING COMMENT 'Name of the person executing the trade.', t_trade_price DOUBLE COMMENT 'Unit price at which the security was traded.', t_chrg DOUBLE COMMENT 'Fee charged for placing this trade request.', t_comm DOUBLE COMMENT 'Commission earned on this trade', t_tax DOUBLE COMMENT 'Amount of tax due on this trade'",
            "sep": "|",
            "header": "False",
            "path": "Batch1/Trade",
            "filename": "Trade.txt"
        },
        "TradeHistoryRaw":
        {
            "raw_schema": "th_t_id BIGINT COMMENT 'Trade identifier. Corresponds to T_ID in the Trade.txt file', th_dts TIMESTAMP COMMENT 'When the trade history was updated.', th_st_id STRING COMMENT 'Status type identifier.'",
            "sep": "|",
            "header": "False",
            "path": "Batch1/TradeHistory",
            "filename": "TradeHistory.txt"
        },
        "DailyMarketHistorical":
        {
            "raw_schema": "dm_date DATE COMMENT 'Date of last completed trading day.', dm_s_symb STRING COMMENT 'Security symbol of the security', dm_close DOUBLE COMMENT 'Closing price of the security on this day.', dm_high DOUBLE COMMENT 'Highest price for the security on this day.', dm_low DOUBLE COMMENT 'Lowest price for the security on this day.', dm_vol INT COMMENT 'Volume of the security on this day.'",
            "sep": "|",
            "header": "False",
            "path": "Batch1/DailyMarket",
            "filename": "DailyMarket.txt"
        },
        "WatchHistory":
        {
            "raw_schema": "w_c_id BIGINT COMMENT 'Customer identifier', w_s_symb STRING COMMENT 'Symbol of the security to watch', w_dts TIMESTAMP COMMENT 'Date and Time Stamp for the action', w_action STRING COMMENT 'Whether activating or canceling the watch'",
            "sep": "|",
            "header": "False",
            "path": "Batch1/WatchHistory",
            "filename": "WatchHistory.txt"
        },
        "HoldingHistory":
        {
            "raw_schema": "hh_h_t_id INT COMMENT 'Trade Identifier of the trade that originally created the holding row.', hh_t_id INT COMMENT 'Trade Identifier of the current trade', hh_before_qty INT COMMENT 'Quantity of this security held before the modifying trade.', hh_after_qty INT COMMENT 'Quantity of this security held after the modifying trade.'",
            "sep": "|",
            "header": "False",
            "path": "Batch1/HoldingHistory",
            "filename": "HoldingHistory.txt"
        },
        "CashTransactionHistory":
        {
            "raw_schema": "ct_ca_id BIGINT COMMENT 'Customer account identifier', ct_dts TIMESTAMP COMMENT 'Timestamp of when the trade took place', ct_amt DOUBLE COMMENT 'Amount of the cash transaction.', ct_name STRING COMMENT 'Transaction name, or description: e.g. Cash from sale of DuPont stock.'",
            "sep": "|",
            "header": "False",
            "path": "Batch1/CashTransaction",
            "filename": "CashTransaction.txt"
        },
        "CustomerMgmt":
        {
            "rowTag": "TPCDI:Action",
            "path": "Batch1/CustomerMgmt",
            "filename": "CustomerMgmt.xml"
        }
    }
}